alias vi=vim
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
alias esql='mysql -uroot -proot meiya -Bse '
alias vm='ssh vagrant@192.168.10.10'
alias agp="ag -iG '.php$' -ai "
alias ag='ag --ignore "*.js" --ignore "*.css"'
alias tinker='php ~/Code/mycode/meiya-local/artisan tinker'
alias vl='vim `find ~/Code/mycode/meiya-local/app/storage/logs | tail -n 1` +1'
alias dl='echo > `find ~/Code/mycode/meiya-local/app/storage/logs | tail -n 1`'
alias mig='php /home/vagrant/Code/mycode/meiya-local/artisan migrate'
alias migmk='php /home/vagrant/Code/mycode/meiya-local/artisan migrate:make'
alias migrb='php /home/vagrant/Code/mycode/meiya-local/artisan migrate:rollback'
alias h='cd ~/Code/mycode/meiya-local;ls'
alias qw='php /home/vagrant/Code/mycode/meiya-local/artisan queue:work'
alias ql='php /home/vagrant/Code/mycode/meiya-local/artisan queue:listen'

export PATH=$HOME/bin:/usr/local/bin:$PATH
export LANG='zh_CN.UTF-8'
export Lc_ALL='zh_CN.UTF-8'

[ "N$MACHTYPE" != "N" ] && alias updatedb=' /usr/libexec/locate.updatedb'
[ "N$BASH_VERSION" != "N" ] && export PS1='[\u \W]\$ '

# 备份管理多个git项目
function gitbackup()
{
    [ $# = 0 ] && new_cwd='.' || new_cwd=$1
    [ ! -d $new_cwd/.git ] && echo "Not a git repository!" && return 1

    suffix='lep'
    gitbackup=".gitbak.$suffix"
    old_cwd=`pwd`
    cd $new_cwd || return 1

    for dir in `ls`
    do
        if [ -d $dir/.git ]; then
            # 将项目的忽略文件也保存备份起来
            for f in `find $dir -name '.gitignore'`
            do
                mv -f $f $f.$suffix
            done
            rm -rf $dir/$gitbackup
            mv $dir/.git $dir/$gitbackup
        fi
    done

    git add -A
    git commit -m 'backup git project'
	git config push.default current
    git push

    echo 'backup git project success!'
    cd $old_cwd
    return 0
}

# 恢复备份的git项目
function gitrestore()
{
    [ $# = 0 ] && new_cwd='.' || new_cwd=$1
    [ ! -d $new_cwd/.git ] && echo "Not a git repository!" && return 1

    suffix='lep'
    gitbackup=".gitbak.$suffix"
    old_cwd=`pwd`
    cd $new_cwd || return 1

    for dir in `ls`
    do
        if [ -d $dir/$gitbackup ]; then
            mv $dir/$gitbackup $dir/.git
        fi
        # 恢复ignore文件
        for f in `find $dir -name .gitignore.$suffix`
        do
            mv -f $f `dirname $f`/.gitignore
        done
    done

    echo 'restore git project success!'
    cd $old_cwd
    return 0
}

# 备份和恢复
function gitbr()
{
    gitbackup  $1
    gitrestore $1
    return 0;
}
